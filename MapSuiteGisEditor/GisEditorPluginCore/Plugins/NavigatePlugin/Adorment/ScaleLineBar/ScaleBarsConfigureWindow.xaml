<Window x:Class="ThinkGeo.MapSuite.GisEditor.Plugins.ScaleBarsConfigureWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Custom="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:GalaSoft_MvvmLight_Command="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF4"
        xmlns:local="clr-namespace:ThinkGeo.MapSuite.GisEditor.Plugins"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:tgLayers="clr-namespace:ThinkGeo.MapSuite.Layers;assembly=ThinkGeo.MapSuite"
        xmlns:tgAdornmentLayers="clr-namespace:ThinkGeo.MapSuite.Layers;assembly=ThinkGeo.MapSuite.Layers.Adornments"
        Title="{DynamicResource ScaleBarsConfigureWindowTitle}"
        ResizeMode="NoResize"
        Width="700"
        SizeToContent="Height"
        Style="{StaticResource WindowStyle}"
        mc:Ignorable="d">
    <Window.DataContext>
        <local:ScaleBarViewModel x:Name="scaleBarViewModel" />
    </Window.DataContext>
    <Window.Resources>
        <ObjectDataProvider x:Key="ScaleBarUnitSystemProvider"
                            MethodName="GetValues"
                            ObjectType="sys:Enum">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="tgAdornmentLayers:UnitSystem" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="ScaleLineUnitSystemProvider"
                            MethodName="GetValues"
                            ObjectType="sys:Enum">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="tgAdornmentLayers:ScaleLineUnitSystem" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

    </Window.Resources>
    <Grid Margin="{DynamicResource MainWindowMargin}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.Resources>
            <local:ScaleTypeToScaleLineCheckedConverter x:Key="ScaleTypeToScaleLineChecked" />
            <local:ScaleTypeToScaleBarCheckedConverter x:Key="ScaleTypeToScaleBarChecked" />
            <local:UnitSystemToMetricCheckedConverter x:Key="UnitSystemToMetricChecked" />
            <local:UnitSystemToImperialCheckedConverter x:Key="UnitSystemToImperialChecked" />
            <local:ScaleLineUnitSystemToStringConverter x:Key="ScaleLineUnitSystemToStringConverter" />
            <Style TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <local:ScaleNumericFormatTypeToStringConverter x:Key="ScaleNumericFormatTypeToStringConverter" />
            <ObjectDataProvider x:Key="LocationProvider"
                                MethodName="GetValues"
                                ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="tgLayers:AdornmentLocation" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ObjectDataProvider x:Key="ScaleNumericFormatTypeProvider"
                                MethodName="GetValues"
                                ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="local:ScaleNumericFormatType" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
        </Grid.Resources>
        <Grid.CommandBindings />
        <Grid Margin="0 0 10 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <TextBlock Margin="0 0 0 5"
                           VerticalAlignment="Bottom"
                           Text="{DynamicResource ScaleBarsConfigureWindowScaleLabel}" />
                <StackPanel Grid.Column="1"
                            Margin="0 0 0 5"
                            HorizontalAlignment="Right"
                            Orientation="Horizontal">
                    <StackPanel.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Width" Value="24" />
                            <Setter Property="Height" Value="24" />
                            <Setter Property="Margin" Value="5 0 0 0" />
                        </Style>
                    </StackPanel.Resources>
                    <Button>
                        <Custom:Interaction.Triggers>
                            <Custom:EventTrigger EventName="Click">
                                <GalaSoft_MvvmLight_Command:EventToCommand Command="{Binding AddNewCommand, Mode=OneWay}" />
                            </Custom:EventTrigger>
                        </Custom:Interaction.Triggers>
                        <Image Source="/GisEditorPluginCore;component/Images/add.png" />
                    </Button>
                    <Button>
                        <Custom:Interaction.Triggers>
                            <Custom:EventTrigger EventName="Click">
                                <GalaSoft_MvvmLight_Command:EventToCommand Command="{Binding RemoveCommand, Mode=OneWay}" />
                            </Custom:EventTrigger>
                        </Custom:Interaction.Triggers>
                        <Image Source="/GisEditorPluginCore;component/Images/delete.png" />
                    </Button>
                </StackPanel>
            </Grid>
            <ListBox Grid.Row="1"
                     DisplayMemberPath="Name"
                     ItemsSource="{Binding ScaleLayers}"
                     SelectedItem="{Binding SelectedLayer,
                                            Mode=TwoWay}" />
        </Grid>
        <StackPanel Grid.Column="1"
                    DataContext="{Binding SelectedLayer}"
                    IsEnabled="{Binding IsSettingEnabled}">
            <GroupBox Header="{DynamicResource ScaleBarsConfigureWindowGeneralPropertiesLabel}">
                <StackPanel>
                    <StackPanel.Resources>
                        <Style TargetType="Grid">
                            <Setter Property="Margin" Value="0 5 0 0" />
                        </Style>
                    </StackPanel.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{DynamicResource ScaleBarsConfigureWindowNameLabel}" />
                        <TextBox Grid.Column="1" Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{DynamicResource ScaleBarsConfigureWindowLocationLabel}" />
                        <ComboBox Grid.Column="1"
                                  ItemsSource="{Binding Source={StaticResource LocationProvider}}"
                                  SelectedItem="{Binding Location,
                                                         Mode=TwoWay}">
                            <ComboBox.ItemContainerStyle>
                                <Style TargetType="ComboBoxItem">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding}" Value="{x:Static tgLayers:AdornmentLocation.UseOffsets}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBox.ItemContainerStyle>
                        </ComboBox>
                        <StackPanel Grid.Column="2"
                                    Margin="5 0 0 0"
                                    Orientation="Horizontal">
                            <TextBlock Margin="0 0 5 0"
                                       Text="{DynamicResource ScaleBarsConfigureWindowLeftOffsetLabel}"
                                       TextAlignment="Right" />
                            <TextBox Width="40" Text="{Binding OffsetX, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>
                        <StackPanel Grid.Column="3"
                                    Margin="5 0 0 0"
                                    Orientation="Horizontal">
                            <TextBlock Margin="0 0 5 0"
                                       Text="{DynamicResource ScaleBarsConfigureWindowTopOffsetLabel}"
                                       TextAlignment="Right" />
                            <TextBox Width="40" Text="{Binding OffsetY, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{DynamicResource ScaleBarsConfigureWindowBackgroundLabel}" />
                        <!--
                            <ComboBox Grid.Column="1"
                            ItemsSource="{Binding Source={StaticResource BackgroundMaskModeProvider}}"
                            SelectedItem="{Binding BackgroundMaskMode,
                            Mode=TwoWay}">
                            <ComboBox.ItemTemplate>
                            <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource BackgroundMaskModeToStringConverter}}" />
                            </DataTemplate>
                            </ComboBox.ItemTemplate>
                            </ComboBox>
                        -->
                        <Button Grid.Column="1"
                                Content="{DynamicResource ScaleBarsConfigureWindowConfigLabel}"
                                IsEnabled="{Binding IsConfigureButtonEabled}">
                            <Custom:Interaction.Triggers>
                                <Custom:EventTrigger EventName="Click">
                                    <GalaSoft_MvvmLight_Command:EventToCommand Command="{Binding ConfigureBackgroundMaskModeCommand, Mode=OneWay}" />
                                </Custom:EventTrigger>
                            </Custom:Interaction.Triggers>
                        </Button>
                    </Grid>
                </StackPanel>
            </GroupBox>
            <GroupBox Header="{DynamicResource ScaleBarsConfigureWindowStyleLabel}">
                <Grid>
                    <Grid.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                        <Style TargetType="TextBox">
                            <Setter Property="Width" Value="50" />
                            <Setter Property="HorizontalAlignment" Value="Left" />
                        </Style>
                        <Style TargetType="local:DropDownColorPicker">
                            <Setter Property="Height" Value="22" />
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" Value="0.5" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="true">
                                    <Setter Property="Opacity" Value="1" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="7" />
                        <RowDefinition />
                        <RowDefinition Height="7" />
                        <RowDefinition />
                        <RowDefinition Height="7" />
                        <RowDefinition />
                        <RowDefinition Height="7" />
                        <RowDefinition />
                        <RowDefinition Height="7" />
                        <RowDefinition />
                        <RowDefinition Height="7" />
                        <RowDefinition />
                        <RowDefinition Height="7" />
                    </Grid.RowDefinitions>
                    <!--  Type  -->
                    <TextBlock Text="{DynamicResource ScaleBarsConfigureWindowTypeLabel}" />
                    <RadioButton x:Name="ScaleLineRdb"
                                 Grid.Column="1"
                                 Content="{DynamicResource ScaleBarsConfigureScaleLineLabel}"
                                 GroupName="ScaleType"
                                 IsChecked="True" />
                    <RadioButton x:Name="ScaleBarRdb"
                                 Grid.Column="2"
                                 HorizontalAlignment="Right"
                                 Content="{DynamicResource ScaleBarsConfigureScaleBarLabel}"
                                 GroupName="ScaleType"
                                 IsChecked="{Binding SelectedLayer,
                                                     Path=ScaleType,
                                                     Converter={StaticResource ScaleTypeToScaleBarChecked}}" />
                    <!--  Width  -->
                    <TextBlock Grid.Row="2"
                               IsEnabled="{Binding IsCommonSettinEnabled}"
                               Text="{DynamicResource ScaleBarsConfigureWidthLabel}" />
                    <TextBox Grid.Row="2"
                             Grid.Column="1"
                             IsEnabled="{Binding IsCommonSettinEnabled}"
                             Text="{Binding Width,
                                            Mode=TwoWay,
                                            UpdateSourceTrigger=PropertyChanged}" />
                    <StackPanel Grid.Row="2"
                                Grid.Column="2"
                                HorizontalAlignment="Right"
                                IsEnabled="{Binding IsCommonSettinEnabled}"
                                Orientation="Horizontal">
                        <TextBlock Margin="0 0 5 0" Text="{DynamicResource ScaleBarsConfigureHeightLabel}" />
                        <TextBox Text="{Binding Height, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <!--  Max Width  -->
                    <TextBlock Grid.Row="4"
                               IsEnabled="{Binding IsSpecialSettingEnabled}"
                               Text="{DynamicResource ScaleBarsConfigureMaximumWidthLabel}" />
                    <TextBox Grid.Row="4"
                             Grid.Column="1"
                             IsEnabled="{Binding IsSpecialSettingEnabled}"
                             Text="{Binding MaximumWidth,
                                            Mode=TwoWay,
                                            UpdateSourceTrigger=PropertyChanged}" />
                    <StackPanel Grid.Row="4"
                                Grid.Column="2"
                                HorizontalAlignment="Right"
                                IsEnabled="{Binding IsSpecialSettingEnabled}"
                                Orientation="Horizontal">
                        <TextBlock Margin="0 0 5 0" Text="{DynamicResource ScaleBarsConfigureThicknessLabel}" />
                        <TextBox Text="{Binding Thickness, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <!--  Color  -->
                    <TextBlock Grid.Row="6"
                               IsEnabled="{Binding IsSpecialSettingEnabled}"
                               Text="{DynamicResource ScaleBarsConfigureColorLabel}" />
                    <!--  <ComboBox Grid.Row="6" Grid.ColumnSpan="3" Grid.Column="1" />  -->
                    <local:DropDownColorPicker Grid.Row="6"
                                               Grid.Column="1"
                                               Grid.ColumnSpan="3"
                                               IsEnabled="{Binding IsSpecialSettingEnabled}"
                                               SelectedBrush="{Binding ForeColor,
                                                                       Mode=TwoWay}" />
                    <!--  Alt Color  -->
                    <TextBlock Grid.Row="8"
                               IsEnabled="{Binding IsSpecialSettingEnabled}"
                               Text="{DynamicResource ScaleBarsConfigureAlternatingColorLabel}" />
                    <!--  <ComboBox Grid.Row="8" Grid.ColumnSpan="3" Grid.Column="1" />  -->
                    <local:DropDownColorPicker Grid.Row="8"
                                               Grid.Column="1"
                                               Grid.ColumnSpan="3"
                                               IsEnabled="{Binding IsSpecialSettingEnabled}"
                                               SelectedBrush="{Binding AlteColor,
                                                                       Mode=TwoWay}" />
                    <!--  Number Format  -->
                    <TextBlock Grid.Row="10"
                               IsEnabled="{Binding IsSpecialSettingEnabled}"
                               Text="{DynamicResource ScaleBarsConfigureNumericFormatLabel}" />
                    <ComboBox Grid.Row="10"
                              Grid.Column="1"
                              Grid.ColumnSpan="3"
                              IsEnabled="{Binding IsSpecialSettingEnabled}"
                              ItemsSource="{Binding Source={StaticResource ScaleNumericFormatTypeProvider}}"
                              SelectedItem="{Binding NumericFormatType,
                                                     Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource ScaleNumericFormatTypeToStringConverter}}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <!--  Unit System  -->
                    <TextBlock Grid.Row="12"
                               IsEnabled="{Binding IsSpecialSettingEnabled}"
                               Text="{DynamicResource ScaleBarsConfigureUnitSystemLabel}" />
                    <ListBox Visibility="{Binding ScaleLineUnitVisibility}" Grid.Row="12" Grid.Column="1" Grid.ColumnSpan="3" BorderBrush="Transparent" 
                             ItemsSource="{Binding Source={StaticResource ScaleLineUnitSystemProvider}}" HorizontalAlignment="Left" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectedItem="{Binding SelectedScaleLineUnitSystem,Mode=TwoWay}">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding}" Value="Default">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border x:Name="ItemPanel" Background="Transparent">
                                                <ContentPresenter />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <RadioButton Content="{Binding .,Converter={StaticResource ScaleLineUnitSystemToStringConverter}}" 
                                         Width="170"
                                             GroupName="ScaleLineUnitSystem"
                                             IsChecked="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},
                                                                 Path=IsSelected}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <ListBox Visibility="{Binding ScaleBarUnitVisibility}" Grid.Row="12" Grid.Column="1" Grid.ColumnSpan="3" BorderBrush="Transparent" 
                             ItemsSource="{Binding Source={StaticResource ScaleBarUnitSystemProvider}}" HorizontalAlignment="Left" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectedItem="{Binding SelectedScaleBarUnitSystem,Mode=TwoWay}">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border x:Name="ItemPanel" Background="Transparent">
                                                <ContentPresenter />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <RadioButton Content="{Binding .,Converter={StaticResource ScaleLineUnitSystemToStringConverter}}" 
                                         Width="170"
                                             GroupName="ScaleBarUnitSystem"
                                             IsChecked="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},
                                                                 Path=IsSelected}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <!--<RadioButton Grid.Row="12"
                                 Grid.Column="1"
                                 Content="{DynamicResource ScaleBarsConfigureMetricLabel}"
                                 GroupName="UnitSystem"
                                 IsChecked="True"
                                 IsEnabled="{Binding IsSpecialSettingEnabled}" />
                    <RadioButton Grid.Row="12"
                                 Grid.Column="2"
                                 HorizontalAlignment="Right"
                                 Content="{DynamicResource ScaleBarsConfigureImperialLabel}"
                                 GroupName="UnitSystem"
                                 IsChecked="{Binding SelectedLayer,
                                                     Path=UnitSystem,
                                                     Converter={StaticResource UnitSystemToImperialChecked}}"
                                 IsEnabled="{Binding IsSpecialSettingEnabled}" />-->
                </Grid>
            </GroupBox>
            <GroupBox Header="{DynamicResource ScaleBarsConfigureWindowPreviewLabel}">
                <Grid>
                    <Image x:Name="PreviewImage"
                           Height="80"
                           Source="{Binding PreviewSource}" />
                </Grid>
            </GroupBox>
        </StackPanel>
        <StackPanel Grid.Row="1"
                    Grid.ColumnSpan="2"
                    Margin="0 8 0 0"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal">
            <Button Content="{DynamicResource ConfigurationOKLable}" Style="{DynamicResource ConfigurationButtonStyle}">
                <Custom:Interaction.Triggers>
                    <Custom:EventTrigger EventName="Click">
                        <GalaSoft_MvvmLight_Command:EventToCommand Command="{Binding OKCommand, Mode=OneWay}" />
                    </Custom:EventTrigger>
                </Custom:Interaction.Triggers>
            </Button>
            <Button Content="{DynamicResource ConfigurationCancelLable}" Style="{DynamicResource ConfigurationButtonStyle}">
                <Custom:Interaction.Triggers>
                    <Custom:EventTrigger EventName="Click">
                        <GalaSoft_MvvmLight_Command:EventToCommand Command="{Binding CancelCommand, Mode=OneWay}" />
                    </Custom:EventTrigger>
                </Custom:Interaction.Triggers>
            </Button>
            <Button Content="{DynamicResource ConfigurationApplyLable}" Style="{DynamicResource ConfigurationButtonStyle}">
                <Custom:Interaction.Triggers>
                    <Custom:EventTrigger EventName="Click">
                        <GalaSoft_MvvmLight_Command:EventToCommand Command="{Binding ApplyCommand, Mode=OneWay}" />
                    </Custom:EventTrigger>
                </Custom:Interaction.Triggers>
            </Button>
            <ContentPresenter x:Name="HelpContainer"
                              Grid.Row="1"
                              Width="70"
                              Margin="11 0 0 0" />
        </StackPanel>
    </Grid>
</Window>